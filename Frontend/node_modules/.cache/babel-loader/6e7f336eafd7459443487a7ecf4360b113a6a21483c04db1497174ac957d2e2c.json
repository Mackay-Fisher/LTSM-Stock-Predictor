{"ast":null,"code":"var _jsxFileName = \"/Users/mackayfisher/Desktop/SPDL/Frontend/stock-price-predictor/src/App.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [ticker, setTicker] = useState(\"\");\n  // const [data, setData] = useState([]);\n  // const [predictions, setPredictions] = useState([]);\n  //\n  // const fetchData = async () => {\n  //   const response = await axios.get(\n  //     `http://localhost:5000/get_stock_data?ticker=${ticker}`,\n  //   );\n  //   setData(response.data);\n  // };\n  //\n  // const predictData = async () => {\n  //   const response = await axios.post(\"http://localhost:5000/predict\", {\n  //     ticker,\n  //   });\n  //   setPredictions(response.data.predictions);\n  // };\n  //\n  // const chartData = {\n  //   labels: data.map((d) => d.Date),\n  //   datasets: [\n  //     {\n  //       label: \"Actual Price\",\n  //       data: data.map((d) => d.Close),\n  //       borderColor: \"blue\",\n  //       fill: false,\n  //     },\n  //     {\n  //       label: \"Predicted Price\",\n  //       data: predictions,\n  //       borderColor: \"red\",\n  //       fill: false,\n  //     },\n  //   ],\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Line","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mackayfisher/Desktop/SPDL/Frontend/stock-price-predictor/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\n\nconst App = () => {\n  // const [ticker, setTicker] = useState(\"\");\n  // const [data, setData] = useState([]);\n  // const [predictions, setPredictions] = useState([]);\n  //\n  // const fetchData = async () => {\n  //   const response = await axios.get(\n  //     `http://localhost:5000/get_stock_data?ticker=${ticker}`,\n  //   );\n  //   setData(response.data);\n  // };\n  //\n  // const predictData = async () => {\n  //   const response = await axios.post(\"http://localhost:5000/predict\", {\n  //     ticker,\n  //   });\n  //   setPredictions(response.data.predictions);\n  // };\n  //\n  // const chartData = {\n  //   labels: data.map((d) => d.Date),\n  //   datasets: [\n  //     {\n  //       label: \"Actual Price\",\n  //       data: data.map((d) => d.Close),\n  //       borderColor: \"blue\",\n  //       fill: false,\n  //     },\n  //     {\n  //       label: \"Predicted Price\",\n  //       data: predictions,\n  //       borderColor: \"red\",\n  //       fill: false,\n  //     },\n  //   ],\n  // };\n\n  return (\n    <div>\n      <h1>Stock Price Predictor</h1>\n      {/* <input */}\n      {/*   type=\"text\" */}\n      {/*   value={ticker} */}\n      {/*   onChange={(e) => setTicker(e.target.value.toUpperCase())} */}\n      {/*   placeholder=\"Enter Stock Ticker\" */}\n      {/* /> */}\n      {/* <button onClick={fetchData}>Fetch Data</button> */}\n      {/* <button onClick={predictData}>Predict</button> */}\n      {/* <Line data={chartData} /> */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAU3B,CAAC;AAEV,CAAC;AAACC,EAAA,GAnDIN,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}