{"ast":null,"code":"var _jsxFileName = \"/Users/mackayfisher/Desktop/SPDL/Frontend/stock-price-predictor/src/Components/stock-predictor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockPredictor = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"AAPL\");\n  const [data, setData] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [dates, setDates] = useState([]);\n  const fetchData = async () => {\n    const response = await axios.get(`http://localhost:5000/get_data?ticker=${ticker}`);\n    setData(response.data);\n  };\n  const fetchPredictions = async () => {\n    const response = await axios.post(\"http://localhost:5000/predict\", {\n      data\n    });\n    setDates(response.data.dates);\n    setPredictions(response.data.predictions);\n  };\n  const trainModel = async () => {\n    await axios.post(\"http://localhost:5000/train\", {\n      ticker\n    });\n    fetchPredictions();\n  };\n  useEffect(() => {\n    fetchData();\n  }, [ticker]);\n  const handlePredict = () => {\n    fetchPredictions();\n  };\n  const chartData = {\n    labels: dates,\n    datasets: [{\n      label: \"Actual Price\",\n      data: data.map(d => d.Close),\n      borderColor: \"blue\",\n      fill: false\n    }, {\n      label: \"Predicted Price\",\n      data: predictions,\n      borderColor: \"red\",\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ticker,\n      onChange: e => setTicker(e.target.value.toUpperCase()),\n      placeholder: \"Enter Stock Ticker\",\n      style: {\n        padding: \"10px\",\n        fontSize: \"16px\",\n        margin: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: trainModel,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        cursor: \"pointer\"\n      },\n      children: \"Train Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        cursor: \"pointer\",\n        marginLeft: \"10px\"\n      },\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(StockPredictor, \"D6WfWFm5ILMDGgwn+xU3iPo1vt8=\");\n_c = StockPredictor;\nexport default StockPredictor;\nvar _c;\n$RefreshReg$(_c, \"StockPredictor\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","StockPredictor","_s","ticker","setTicker","data","setData","predictions","setPredictions","dates","setDates","fetchData","response","get","fetchPredictions","post","trainModel","handlePredict","chartData","labels","datasets","label","map","d","Close","borderColor","fill","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toUpperCase","placeholder","fontSize","margin","onClick","cursor","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["/Users/mackayfisher/Desktop/SPDL/Frontend/stock-price-predictor/src/Components/stock-predictor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\n\nconst StockPredictor = () => {\n  const [ticker, setTicker] = useState(\"AAPL\");\n  const [data, setData] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [dates, setDates] = useState([]);\n\n  const fetchData = async () => {\n    const response = await axios.get(\n      `http://localhost:5000/get_data?ticker=${ticker}`,\n    );\n    setData(response.data);\n  };\n\n  const fetchPredictions = async () => {\n    const response = await axios.post(\"http://localhost:5000/predict\", {\n      data,\n    });\n    setDates(response.data.dates);\n    setPredictions(response.data.predictions);\n  };\n\n  const trainModel = async () => {\n    await axios.post(\"http://localhost:5000/train\", { ticker });\n    fetchPredictions();\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [ticker]);\n\n  const handlePredict = () => {\n    fetchPredictions();\n  };\n\n  const chartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: \"Actual Price\",\n        data: data.map((d) => d.Close),\n        borderColor: \"blue\",\n        fill: false,\n      },\n      {\n        label: \"Predicted Price\",\n        data: predictions,\n        borderColor: \"red\",\n        fill: false,\n      },\n    ],\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h1>Stock Price Predictor</h1>\n      <input\n        type=\"text\"\n        value={ticker}\n        onChange={(e) => setTicker(e.target.value.toUpperCase())}\n        placeholder=\"Enter Stock Ticker\"\n        style={{ padding: \"10px\", fontSize: \"16px\", margin: \"10px\" }}\n      />\n      <br />\n      <button\n        onClick={trainModel}\n        style={{ padding: \"10px 20px\", fontSize: \"16px\", cursor: \"pointer\" }}\n      >\n        Train Model\n      </button>\n      <button\n        onClick={handlePredict}\n        style={{\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          marginLeft: \"10px\",\n        }}\n      >\n        Predict\n      </button>\n      <div style={{ marginTop: \"20px\" }}>\n        <Line data={chartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default StockPredictor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}